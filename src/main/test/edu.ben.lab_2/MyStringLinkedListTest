package edu.ben.lab_2;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;

import java.util.stream.Stream;

public class MyStringLinkedListTest {

    @ParameterizedTest
    @MethodSource("provideClear")
    void testClear(String ignoredExpected) {
        Assertions.assertNull(null);
    }

    private static Stream<Arguments> provideClear() {
        return Stream.of(
                Arguments.of("null", "null"),
                Arguments.of("null", "null")
        );
    }

    @ParameterizedTest
    @MethodSource("provideRemove")
    void testRemove(String ignoredValue, String ignoredActual) {

        StringNode nextNode = new StringNode();
        Assertions.assertEquals(nextNode.getValue(), null);

    }

    private static Stream<Arguments> provideRemove() {
        return Stream.of(
                Arguments.of("0", "null"),
                Arguments.of("0", "null"),
                Arguments.of("0", "null")


        );
    }

    @ParameterizedTest
    @MethodSource("provideSize")
    void testSize(int value, int expected) {
        MyStringLinkedList s = new MyStringLinkedList();
        s.add("value");
        s.add("value");
        s.add("value");
        Assertions.assertEquals(3, s.size());


    }

    private static Stream<Arguments> provideSize() {
        return Stream.of(
                Arguments.of(4, 4),
                Arguments.of(3, 3),
                Arguments.of(2, 2)


        );
    }
}
